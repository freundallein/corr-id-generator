// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/corr-id-generator.proto

package corr_id_generator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_396eb2c01d809b6c, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	CorrelationId        uint64   `protobuf:"varint,1,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_396eb2c01d809b6c, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCorrelationId() uint64 {
	if m != nil {
		return m.CorrelationId
	}
	return 0
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*Response)(nil), "Response")
}

func init() { proto.RegisterFile("grpc/proto/corr-id-generator.proto", fileDescriptor_396eb2c01d809b6c) }

var fileDescriptor_396eb2c01d809b6c = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x2f, 0x2a, 0x48,
	0xd6, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0xce, 0x2f, 0x2a, 0xd2, 0xcd, 0x4c, 0xd1, 0x4d,
	0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0xc9, 0x2f, 0xd2, 0x03, 0x8b, 0x2b, 0xf1, 0x70, 0x71, 0xb9,
	0xa7, 0x96, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x19, 0x70, 0x71, 0x04, 0xa5, 0x16,
	0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xa9, 0x70, 0xf1, 0x82, 0x34, 0xa5, 0xe6, 0x24, 0x96, 0x64,
	0xe6, 0xe7, 0x79, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x04, 0xa1, 0x0a, 0x1a, 0xb9, 0x71,
	0x89, 0x39, 0x23, 0x0b, 0xb8, 0xc3, 0xcc, 0x17, 0xd2, 0xe1, 0x12, 0x70, 0x4f, 0x2d, 0x41, 0x91,
	0x14, 0xe2, 0xd6, 0x43, 0x58, 0x26, 0xc5, 0xa9, 0x07, 0xb3, 0x4b, 0x89, 0x21, 0x89, 0x0d, 0xec,
	0x1c, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x9e, 0xfc, 0x56, 0xb4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CorrelationIdGeneratorClient is the client API for CorrelationIdGenerator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CorrelationIdGeneratorClient interface {
	GetCorrelationId(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error)
}

type correlationIdGeneratorClient struct {
	cc *grpc.ClientConn
}

func NewCorrelationIdGeneratorClient(cc *grpc.ClientConn) CorrelationIdGeneratorClient {
	return &correlationIdGeneratorClient{cc}
}

func (c *correlationIdGeneratorClient) GetCorrelationId(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/CorrelationIdGenerator/GetCorrelationId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CorrelationIdGeneratorServer is the server API for CorrelationIdGenerator service.
type CorrelationIdGeneratorServer interface {
	GetCorrelationId(context.Context, *GetRequest) (*Response, error)
}

func RegisterCorrelationIdGeneratorServer(s *grpc.Server, srv CorrelationIdGeneratorServer) {
	s.RegisterService(&_CorrelationIdGenerator_serviceDesc, srv)
}

func _CorrelationIdGenerator_GetCorrelationId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CorrelationIdGeneratorServer).GetCorrelationId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CorrelationIdGenerator/GetCorrelationId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CorrelationIdGeneratorServer).GetCorrelationId(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CorrelationIdGenerator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CorrelationIdGenerator",
	HandlerType: (*CorrelationIdGeneratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCorrelationId",
			Handler:    _CorrelationIdGenerator_GetCorrelationId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/proto/corr-id-generator.proto",
}
